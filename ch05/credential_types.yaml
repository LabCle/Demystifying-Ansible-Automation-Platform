---
-   created: '2022-01-29T22:54:47.766011Z'
    description: ''
    id: 1
    injectors: {}
    inputs:
        fields:
        -   id: username
            label: Username
            type: string
        -   ask_at_runtime: true
            id: password
            label: Password
            secret: true
            type: string
        -   format: ssh_private_key
            id: ssh_key_data
            label: SSH Private Key
            multiline: true
            secret: true
            type: string
        -   id: ssh_public_key_data
            label: Signed SSH Certificate
            multiline: true
            secret: true
            type: string
        -   ask_at_runtime: true
            id: ssh_key_unlock
            label: Private Key Passphrase
            secret: true
            type: string
        -   help_text: Specify a method for "become"
                operations. This is equivalent to specifying
                the --become-method Ansible parameter.
            id: become_method
            label: Privilege Escalation Method
            type: string
        -   id: become_username
            label: Privilege Escalation Username
            type: string
        -   ask_at_runtime: true
            id: become_password
            label: Privilege Escalation Password
            secret: true
            type: string
    kind: ssh
    managed: true
    modified: '2022-01-29T22:54:47.766011Z'
    name: Machine
    namespace: ssh
    related:
        activity_stream: /api/v2/credential_types/1/activity_stream/
        credentials: /api/v2/credential_types/1/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/1/
-   created: '2022-01-29T22:54:47.774093Z'
    description: ''
    id: 2
    injectors: {}
    inputs:
        fields:
        -   id: username
            label: Username
            type: string
        -   id: password
            label: Password
            secret: true
            type: string
        -   format: ssh_private_key
            id: ssh_key_data
            label: SCM Private Key
            multiline: true
            secret: true
            type: string
        -   id: ssh_key_unlock
            label: Private Key Passphrase
            secret: true
            type: string
    kind: scm
    managed: true
    modified: '2022-01-29T22:54:47.774093Z'
    name: Source Control
    namespace: scm
    related:
        activity_stream: /api/v2/credential_types/2/activity_stream/
        credentials: /api/v2/credential_types/2/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/2/
-   created: '2022-01-29T22:54:47.781160Z'
    description: ''
    id: 3
    injectors: {}
    inputs:
        fields:
        -   ask_at_runtime: true
            id: vault_password
            label: Vault Password
            secret: true
            type: string
        -   format: vault_id
            help_text: 'Specify an (optional) Vault
                ID. This is equivalent to specifying
                the --vault-id Ansible parameter for
                providing multiple Vault passwords.  Note:
                this feature only works in Ansible 2.4+.'
            id: vault_id
            label: Vault Identifier
            type: string
        required:
        - vault_password
    kind: vault
    managed: true
    modified: '2022-01-29T22:54:47.781160Z'
    name: Vault
    namespace: vault
    related:
        activity_stream: /api/v2/credential_types/3/activity_stream/
        credentials: /api/v2/credential_types/3/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/3/
-   created: '2022-01-29T22:54:47.787482Z'
    description: ''
    id: 4
    injectors: {}
    inputs:
        dependencies:
            authorize_password:
            - authorize
        fields:
        -   id: username
            label: Username
            type: string
        -   id: password
            label: Password
            secret: true
            type: string
        -   format: ssh_private_key
            id: ssh_key_data
            label: SSH Private Key
            multiline: true
            secret: true
            type: string
        -   id: ssh_key_unlock
            label: Private Key Passphrase
            secret: true
            type: string
        -   id: authorize
            label: Authorize
            type: boolean
        -   id: authorize_password
            label: Authorize Password
            secret: true
            type: string
        required:
        - username
    kind: net
    managed: true
    modified: '2022-01-29T22:54:47.787482Z'
    name: Network
    namespace: net
    related:
        activity_stream: /api/v2/credential_types/4/activity_stream/
        credentials: /api/v2/credential_types/4/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/4/
-   created: '2022-01-29T22:54:47.793931Z'
    description: ''
    id: 5
    injectors: {}
    inputs:
        fields:
        -   id: username
            label: Access Key
            type: string
        -   id: password
            label: Secret Key
            secret: true
            type: string
        -   help_text: Security Token Service (STS)
                is a web service that enables you to
                request temporary, limited-privilege
                credentials for AWS Identity and Access
                Management (IAM) users.
            id: security_token
            label: STS Token
            secret: true
            type: string
        required:
        - username
        - password
    kind: cloud
    managed: true
    modified: '2022-01-29T22:54:47.793931Z'
    name: Amazon Web Services
    namespace: aws
    related:
        activity_stream: /api/v2/credential_types/5/activity_stream/
        credentials: /api/v2/credential_types/5/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/5/
-   created: '2022-01-29T22:54:47.798221Z'
    description: ''
    id: 6
    injectors: {}
    inputs:
        fields:
        -   id: username
            label: Username
            type: string
        -   id: password
            label: Password (API Key)
            secret: true
            type: string
        -   help_text: The host to authenticate with.  For
                example, https://openstack.business.com/v2.0/
            id: host
            label: Host (Authentication URL)
            type: string
        -   id: project
            label: Project (Tenant Name)
            type: string
        -   id: project_domain_name
            label: Project (Domain Name)
            type: string
        -   help_text: OpenStack domains define administrative
                boundaries. It is only needed for Keystone
                v3 authentication URLs. Refer to the
                documentation for common scenarios.
            id: domain
            label: Domain Name
            type: string
        -   help_text: For some cloud providers, like
                OVH, region must be specified
            id: region
            label: Region Name
            type: string
        -   default: true
            id: verify_ssl
            label: Verify SSL
            type: boolean
        required:
        - username
        - password
        - host
        - project
    kind: cloud
    managed: true
    modified: '2022-01-29T22:54:47.798221Z'
    name: OpenStack
    namespace: openstack
    related:
        activity_stream: /api/v2/credential_types/6/activity_stream/
        credentials: /api/v2/credential_types/6/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/6/
-   created: '2022-01-29T22:54:47.800685Z'
    description: ''
    id: 7
    injectors: {}
    inputs:
        fields:
        -   help_text: Enter the hostname or IP address
                that corresponds to your VMware vCenter.
            id: host
            label: VCenter Host
            type: string
        -   id: username
            label: Username
            type: string
        -   id: password
            label: Password
            secret: true
            type: string
        required:
        - host
        - username
        - password
    kind: cloud
    managed: true
    modified: '2022-01-29T22:54:47.800685Z'
    name: VMware vCenter
    namespace: vmware
    related:
        activity_stream: /api/v2/credential_types/7/activity_stream/
        credentials: /api/v2/credential_types/7/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/7/
-   created: '2022-01-29T22:54:47.802915Z'
    description: ''
    id: 8
    injectors: {}
    inputs:
        fields:
        -   help_text: Enter the URL that corresponds
                to your Red Hat Satellite 6 server.
                For example, https://satellite.example.org
            id: host
            label: Satellite 6 URL
            type: string
        -   id: username
            label: Username
            type: string
        -   id: password
            label: Password
            secret: true
            type: string
        required:
        - host
        - username
        - password
    kind: cloud
    managed: true
    modified: '2022-01-29T22:54:47.802915Z'
    name: Red Hat Satellite 6
    namespace: satellite6
    related:
        activity_stream: /api/v2/credential_types/8/activity_stream/
        credentials: /api/v2/credential_types/8/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/8/
-   created: '2022-01-29T22:54:47.805160Z'
    description: ''
    id: 9
    injectors: {}
    inputs:
        fields:
        -   help_text: The email address assigned to
                the Google Compute Engine service account.
            id: username
            label: Service Account Email Address
            type: string
        -   help_text: 'The Project ID is the GCE assigned
                identification. It is often constructed
                as three words or two words followed
                by a three-digit number. Examples: project-id-000
                and another-project-id'
            id: project
            label: Project
            type: string
        -   format: ssh_private_key
            help_text: Paste the contents of the PEM
                file associated with the service account
                email.
            id: ssh_key_data
            label: RSA Private Key
            multiline: true
            secret: true
            type: string
        required:
        - username
        - ssh_key_data
    kind: cloud
    managed: true
    modified: '2022-01-29T22:54:47.805160Z'
    name: Google Compute Engine
    namespace: gce
    related:
        activity_stream: /api/v2/credential_types/9/activity_stream/
        credentials: /api/v2/credential_types/9/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/9/
-   created: '2022-01-29T22:54:47.807630Z'
    description: ''
    id: 10
    injectors: {}
    inputs:
        fields:
        -   help_text: Subscription ID is an Azure construct,
                which is mapped to a username.
            id: subscription
            label: Subscription ID
            type: string
        -   id: username
            label: Username
            type: string
        -   id: password
            label: Password
            secret: true
            type: string
        -   id: client
            label: Client ID
            type: string
        -   id: secret
            label: Client Secret
            secret: true
            type: string
        -   id: tenant
            label: Tenant ID
            type: string
        -   help_text: Environment variable AZURE_CLOUD_ENVIRONMENT
                when using Azure GovCloud or Azure stack.
            id: cloud_environment
            label: Azure Cloud Environment
            type: string
        required:
        - subscription
    kind: cloud
    managed: true
    modified: '2022-01-29T22:54:47.807630Z'
    name: Microsoft Azure Resource Manager
    namespace: azure_rm
    related:
        activity_stream: /api/v2/credential_types/10/activity_stream/
        credentials: /api/v2/credential_types/10/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/10/
-   created: '2022-01-29T22:54:47.810209Z'
    description: ''
    id: 11
    injectors: {}
    inputs:
        fields:
        -   help_text: This token needs to come from
                your profile settings in GitHub
            id: token
            label: Token
            secret: true
            type: string
        required:
        - token
    kind: token
    managed: true
    modified: '2022-01-29T22:54:47.810209Z'
    name: GitHub Personal Access Token
    namespace: github_token
    related:
        activity_stream: /api/v2/credential_types/11/activity_stream/
        credentials: /api/v2/credential_types/11/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/11/
-   created: '2022-01-29T22:54:47.812758Z'
    description: ''
    id: 12
    injectors: {}
    inputs:
        fields:
        -   help_text: This token needs to come from
                your profile settings in GitLab
            id: token
            label: Token
            secret: true
            type: string
        required:
        - token
    kind: token
    managed: true
    modified: '2022-01-29T22:54:47.812758Z'
    name: GitLab Personal Access Token
    namespace: gitlab_token
    related:
        activity_stream: /api/v2/credential_types/12/activity_stream/
        credentials: /api/v2/credential_types/12/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/12/
-   created: '2022-01-29T22:54:47.817972Z'
    description: ''
    id: 13
    injectors:
        env:
            INSIGHTS_PASSWORD: '{{password}}'
            INSIGHTS_USER: '{{username}}'
        extra_vars:
            scm_password: '{{password}}'
            scm_username: '{{username}}'
    inputs:
        fields:
        -   id: username
            label: Username
            type: string
        -   id: password
            label: Password
            secret: true
            type: string
        required:
        - username
        - password
    kind: insights
    managed: true
    modified: '2022-01-29T22:54:47.817972Z'
    name: Insights
    namespace: insights
    related:
        activity_stream: /api/v2/credential_types/13/activity_stream/
        credentials: /api/v2/credential_types/13/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/13/
-   created: '2022-01-29T22:54:47.822287Z'
    description: ''
    id: 14
    injectors:
        env:
            OVIRT_INI_PATH: '{{tower.filename}}'
            OVIRT_PASSWORD: '{{password}}'
            OVIRT_URL: '{{host}}'
            OVIRT_USERNAME: '{{username}}'
        file:
            template: '[ovirt]

                ovirt_url={{host}}

                ovirt_username={{username}}

                ovirt_password={{password}}

                {% if ca_file %}ovirt_ca_file={{ca_file}}{%
                endif %}'
    inputs:
        fields:
        -   help_text: The host to authenticate with.
            id: host
            label: Host (Authentication URL)
            type: string
        -   id: username
            label: Username
            type: string
        -   id: password
            label: Password
            secret: true
            type: string
        -   help_text: Absolute file path to the CA
                file to use (optional)
            id: ca_file
            label: CA File
            type: string
        required:
        - host
        - username
        - password
    kind: cloud
    managed: true
    modified: '2022-01-29T22:54:47.822287Z'
    name: Red Hat Virtualization
    namespace: rhv
    related:
        activity_stream: /api/v2/credential_types/14/activity_stream/
        credentials: /api/v2/credential_types/14/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/14/
-   created: '2022-01-29T22:54:47.826738Z'
    description: ''
    id: 15
    injectors:
        env:
            CONTROLLER_HOST: '{{host}}'
            CONTROLLER_OAUTH_TOKEN: '{{oauth_token}}'
            CONTROLLER_PASSWORD: '{{password}}'
            CONTROLLER_USERNAME: '{{username}}'
            CONTROLLER_VERIFY_SSL: '{{verify_ssl}}'
            TOWER_HOST: '{{host}}'
            TOWER_OAUTH_TOKEN: '{{oauth_token}}'
            TOWER_PASSWORD: '{{password}}'
            TOWER_USERNAME: '{{username}}'
            TOWER_VERIFY_SSL: '{{verify_ssl}}'
    inputs:
        fields:
        -   help_text: Red Hat Ansible Automation Platform
                base URL to authenticate with.
            id: host
            label: Red Hat Ansible Automation Platform
            type: string
        -   help_text: Red Hat Ansible Automation Platform
                username id to authenticate as.This
                should not be set if an OAuth token
                is being used.
            id: username
            label: Username
            type: string
        -   id: password
            label: Password
            secret: true
            type: string
        -   help_text: An OAuth token to use to authenticate
                with.This should not be set if username/password
                are being used.
            id: oauth_token
            label: OAuth Token
            secret: true
            type: string
        -   id: verify_ssl
            label: Verify SSL
            secret: false
            type: boolean
        required:
        - host
    kind: cloud
    managed: true
    modified: '2022-01-29T22:54:47.826738Z'
    name: Red Hat Ansible Automation Platform
    namespace: controller
    related:
        activity_stream: /api/v2/credential_types/15/activity_stream/
        credentials: /api/v2/credential_types/15/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/15/
-   created: '2022-01-29T22:54:47.830949Z'
    description: ''
    id: 16
    injectors: {}
    inputs:
        fields:
        -   help_text: The OpenShift or Kubernetes API
                Endpoint to authenticate with.
            id: host
            label: OpenShift or Kubernetes API Endpoint
            type: string
        -   id: bearer_token
            label: API authentication bearer token
            secret: true
            type: string
        -   default: true
            id: verify_ssl
            label: Verify SSL
            type: boolean
        -   id: ssl_ca_cert
            label: Certificate Authority data
            multiline: true
            secret: true
            type: string
        required:
        - host
        - bearer_token
    kind: kubernetes
    managed: true
    modified: '2022-01-29T22:54:47.830949Z'
    name: OpenShift or Kubernetes API Bearer Token
    namespace: kubernetes_bearer_token
    related:
        activity_stream: /api/v2/credential_types/16/activity_stream/
        credentials: /api/v2/credential_types/16/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/16/
-   created: '2022-01-29T22:54:47.835320Z'
    description: ''
    id: 17
    injectors: {}
    inputs:
        fields:
        -   default: quay.io
            help_text: Authentication endpoint for the
                container registry.
            id: host
            label: Authentication URL
            type: string
        -   id: username
            label: Username
            type: string
        -   help_text: A password or token used to authenticate
                with
            id: password
            label: Password or Token
            secret: true
            type: string
        -   default: true
            id: verify_ssl
            label: Verify SSL
            type: boolean
        required:
        - host
    kind: registry
    managed: true
    modified: '2022-01-29T22:54:47.835320Z'
    name: Container Registry
    namespace: registry
    related:
        activity_stream: /api/v2/credential_types/17/activity_stream/
        credentials: /api/v2/credential_types/17/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/17/
-   created: '2022-01-29T22:54:47.839639Z'
    description: ''
    id: 18
    injectors: {}
    inputs:
        fields:
        -   help_text: The URL of the Galaxy instance
                to connect to.
            id: url
            label: Galaxy Server URL
            type: string
        -   help_text: The URL of a Keycloak server
                token_endpoint, if using SSO auth.
            id: auth_url
            label: Auth Server URL
            type: string
        -   help_text: A token to use for authentication
                against the Galaxy instance.
            id: token
            label: API Token
            secret: true
            type: string
        required:
        - url
    kind: galaxy
    managed: true
    modified: '2022-01-29T22:54:47.839639Z'
    name: Ansible Galaxy/Automation Hub API Token
    namespace: galaxy_api_token
    related:
        activity_stream: /api/v2/credential_types/18/activity_stream/
        credentials: /api/v2/credential_types/18/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/18/
-   created: '2022-01-29T22:54:47.844183Z'
    description: ''
    id: 19
    injectors: {}
    inputs:
        fields:
        -   format: url
            id: url
            label: CyberArk AIM URL
            type: string
        -   id: app_id
            label: Application ID
            secret: true
            type: string
        -   id: client_key
            label: Client Key
            multiline: true
            secret: true
            type: string
        -   id: client_cert
            label: Client Certificate
            multiline: true
            secret: true
            type: string
        -   default: true
            id: verify
            label: Verify SSL Certificates
            type: boolean
        metadata:
        -   help_text: 'Lookup query for the object.
                Ex: Safe=TestSafe;Object=testAccountName123'
            id: object_query
            label: Object Query
            type: string
        -   choices:
            - Exact
            - Regexp
            default: Exact
            id: object_query_format
            label: Object Query Format
            type: string
        -   help_text: Object request reason. This is
                only needed if it is required by the
                object's policy.
            id: reason
            label: Reason
            type: string
        required:
        - url
        - app_id
        - object_query
    kind: external
    managed: true
    modified: '2022-01-29T22:54:47.844183Z'
    name: CyberArk AIM Central Credential Provider Lookup
    namespace: aim
    related:
        activity_stream: /api/v2/credential_types/19/activity_stream/
        credentials: /api/v2/credential_types/19/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/19/
-   created: '2022-01-29T22:54:47.849711Z'
    description: ''
    id: 20
    injectors: {}
    inputs:
        fields:
        -   format: url
            id: url
            label: Vault URL (DNS Name)
            type: string
        -   id: client
            label: Client ID
            type: string
        -   id: secret
            label: Client Secret
            secret: true
            type: string
        -   id: tenant
            label: Tenant ID
            type: string
        -   choices:
            - AzureGermanCloud
            - AzureChinaCloud
            - AzureCloud
            - AzureUSGovernment
            default: AzureCloud
            help_text: Specify which azure cloud environment
                to use.
            id: cloud_name
            label: Cloud Environment
        metadata:
        -   help_text: The name of the secret to look
                up.
            id: secret_field
            label: Secret Name
            type: string
        -   help_text: Used to specify a specific secret
                version (if left empty, the latest version
                will be used).
            id: secret_version
            label: Secret Version
            type: string
        required:
        - url
        - client
        - secret
        - tenant
        - secret_field
    kind: external
    managed: true
    modified: '2022-01-29T22:54:47.849711Z'
    name: Microsoft Azure Key Vault
    namespace: azure_kv
    related:
        activity_stream: /api/v2/credential_types/20/activity_stream/
        credentials: /api/v2/credential_types/20/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/20/
-   created: '2022-01-29T22:54:47.854403Z'
    description: ''
    id: 21
    injectors: {}
    inputs:
        fields:
        -   format: url
            help_text: Centrify Tenant URL
            id: url
            label: Centrify Tenant URL
            type: string
        -   help_text: Centrify API User, having necessary
                permissions as mentioned in support
                doc
            id: client_id
            label: Centrify API User
            type: string
        -   help_text: Password of Centrify API User
                with necessary permissions
            id: client_password
            label: Centrify API Password
            secret: true
            type: string
        -   default: awx
            help_text: Application ID of the configured
                OAuth2 Client (defaults to 'awx')
            id: oauth_application_id
            label: OAuth2 Application ID
            type: string
        -   default: awx
            help_text: Scope of the configured OAuth2
                Client (defaults to 'awx')
            id: oauth_scope
            label: OAuth2 Scope
            type: string
        metadata:
        -   help_text: Local system account or Domain
                account name enrolled in Centrify Vault.
                eg. (root or DOMAIN/Administrator)
            id: account-name
            label: Account Name
            type: string
        -   help_text: Machine Name enrolled with in
                Centrify Portal
            id: system-name
            label: System Name
            type: string
        required:
        - url
        - account-name
        - system-name
        - client_id
        - client_password
    kind: external
    managed: true
    modified: '2022-01-29T22:54:47.854403Z'
    name: Centrify Vault Credential Provider Lookup
    namespace: centrify_vault_kv
    related:
        activity_stream: /api/v2/credential_types/21/activity_stream/
        credentials: /api/v2/credential_types/21/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/21/
-   created: '2022-01-29T22:54:47.858279Z'
    description: ''
    id: 22
    injectors: {}
    inputs:
        fields:
        -   format: url
            id: url
            label: Conjur URL
            type: string
        -   id: api_key
            label: API Key
            secret: true
            type: string
        -   id: account
            label: Account
            type: string
        -   id: username
            label: Username
            type: string
        -   id: cacert
            label: Public Key Certificate
            multiline: true
            type: string
        metadata:
        -   help_text: The identifier for the secret
                e.g., /some/identifier
            id: secret_path
            label: Secret Identifier
            type: string
        -   help_text: Used to specify a specific secret
                version (if left empty, the latest version
                will be used).
            id: secret_version
            label: Secret Version
            type: string
        required:
        - url
        - api_key
        - account
        - username
    kind: external
    managed: true
    modified: '2022-01-29T22:54:47.858279Z'
    name: CyberArk Conjur Secret Lookup
    namespace: conjur
    related:
        activity_stream: /api/v2/credential_types/22/activity_stream/
        credentials: /api/v2/credential_types/22/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/22/
-   created: '2022-01-29T22:54:47.862213Z'
    description: ''
    id: 23
    injectors: {}
    inputs:
        fields:
        -   format: url
            help_text: The URL to the HashiCorp Vault
            id: url
            label: Server URL
            type: string
        -   help_text: The access token used to authenticate
                to the Vault server
            id: token
            label: Token
            secret: true
            type: string
        -   help_text: The CA certificate used to verify
                the SSL certificate of the Vault server
            id: cacert
            label: CA Certificate
            multiline: true
            type: string
        -   help_text: The Role ID for AppRole Authentication
            id: role_id
            label: AppRole role_id
            multiline: false
            type: string
        -   help_text: The Secret ID for AppRole Authentication
            id: secret_id
            label: AppRole secret_id
            multiline: false
            secret: true
            type: string
        -   help_text: Name of the namespace to use
                when authenticate and retrieve secrets
            id: namespace
            label: Namespace name (Vault Enterprise
                only)
            multiline: false
            type: string
        -   default: approle
            help_text: The AppRole Authentication path
                to use if one isn't provided in the
                metadata when linking to an input field.
                Defaults to 'approle'
            id: default_auth_path
            label: Path to Approle Auth
            multiline: false
            type: string
        -   choices:
            - v1
            - v2
            default: v1
            help_text: API v1 is for static key/value
                lookups.  API v2 is for versioned key/value
                lookups.
            id: api_version
            label: API Version
        metadata:
        -   help_text: The name of the kv secret backend
                (if left empty, the first segment of
                the secret path will be used).
            id: secret_backend
            label: Name of Secret Backend
            type: string
        -   help_text: The path to the secret stored
                in the secret backend e.g, /some/secret/.
                It is recommended that you use the secret
                backend field to identify the storage
                backend and to use this field for locating
                a specific secret within that store.
                However, if you prefer to fully identify
                both the secret backend and one of its
                secrets using only this field, join
                their locations into a single path without
                any additional separators, e.g, /location/of/backend/some/secret.
            id: secret_path
            label: Path to Secret
            type: string
        -   help_text: The path where the Authentication
                method is mounted e.g, approle
            id: auth_path
            label: Path to Auth
            multiline: false
            type: string
        -   help_text: The name of the key to look up
                in the secret.
            id: secret_key
            label: Key Name
            type: string
        -   help_text: Used to specify a specific secret
                version (if left empty, the latest version
                will be used).
            id: secret_version
            label: Secret Version (v2 only)
            type: string
        required:
        - url
        - secret_path
        - api_version
        - secret_key
    kind: external
    managed: true
    modified: '2022-01-29T22:54:47.862213Z'
    name: HashiCorp Vault Secret Lookup
    namespace: hashivault_kv
    related:
        activity_stream: /api/v2/credential_types/23/activity_stream/
        credentials: /api/v2/credential_types/23/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/23/
-   created: '2022-01-29T22:54:47.866077Z'
    description: ''
    id: 24
    injectors: {}
    inputs:
        fields:
        -   format: url
            help_text: The URL to the HashiCorp Vault
            id: url
            label: Server URL
            type: string
        -   help_text: The access token used to authenticate
                to the Vault server
            id: token
            label: Token
            secret: true
            type: string
        -   help_text: The CA certificate used to verify
                the SSL certificate of the Vault server
            id: cacert
            label: CA Certificate
            multiline: true
            type: string
        -   help_text: The Role ID for AppRole Authentication
            id: role_id
            label: AppRole role_id
            multiline: false
            type: string
        -   help_text: The Secret ID for AppRole Authentication
            id: secret_id
            label: AppRole secret_id
            multiline: false
            secret: true
            type: string
        -   help_text: Name of the namespace to use
                when authenticate and retrieve secrets
            id: namespace
            label: Namespace name (Vault Enterprise
                only)
            multiline: false
            type: string
        -   default: approle
            help_text: The AppRole Authentication path
                to use if one isn't provided in the
                metadata when linking to an input field.
                Defaults to 'approle'
            id: default_auth_path
            label: Path to Approle Auth
            multiline: false
            type: string
        metadata:
        -   id: public_key
            label: Unsigned Public Key
            multiline: true
            type: string
        -   help_text: The path to the secret stored
                in the secret backend e.g, /some/secret/.
                It is recommended that you use the secret
                backend field to identify the storage
                backend and to use this field for locating
                a specific secret within that store.
                However, if you prefer to fully identify
                both the secret backend and one of its
                secrets using only this field, join
                their locations into a single path without
                any additional separators, e.g, /location/of/backend/some/secret.
            id: secret_path
            label: Path to Secret
            type: string
        -   help_text: The path where the Authentication
                method is mounted e.g, approle
            id: auth_path
            label: Path to Auth
            multiline: false
            type: string
        -   help_text: The name of the role used to
                sign.
            id: role
            label: Role Name
            type: string
        -   help_text: Valid principals (either usernames
                or hostnames) that the certificate should
                be signed for.
            id: valid_principals
            label: Valid Principals
            type: string
        required:
        - url
        - secret_path
        - public_key
        - role
    kind: external
    managed: true
    modified: '2022-01-29T22:54:47.866077Z'
    name: HashiCorp Vault Signed SSH
    namespace: hashivault_ssh
    related:
        activity_stream: /api/v2/credential_types/24/activity_stream/
        credentials: /api/v2/credential_types/24/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/24/
-   created: '2022-01-29T22:54:47.869938Z'
    description: ''
    id: 25
    injectors: {}
    inputs:
        fields:
        -   help_text: The tenant e.g. "ex" when the
                URL is https://ex.secretservercloud.com
            id: tenant
            label: Tenant
            type: string
        -   choices:
            - ca
            - com
            - com.au
            - com.sg
            - eu
            default: com
            help_text: The TLD of the tenant e.g. "com"
                when the URL is https://ex.secretservercloud.com
            id: tld
            label: Top-level Domain (TLD)
        -   id: client_id
            label: Client ID
            type: string
        -   id: client_secret
            label: Client Secret
            secret: true
            type: string
        metadata:
        -   help_text: The secret path e.g. /test/secret1
            id: path
            label: Secret Path
            type: string
        required:
        - tenant
        - client_id
        - client_secret
        - path
    kind: external
    managed: true
    modified: '2022-01-29T22:54:47.869938Z'
    name: Thycotic DevOps Secrets Vault
    namespace: thycotic_dsv
    related:
        activity_stream: /api/v2/credential_types/25/activity_stream/
        credentials: /api/v2/credential_types/25/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/25/
-   created: '2022-01-29T22:54:47.874220Z'
    description: ''
    id: 26
    injectors: {}
    inputs:
        fields:
        -   help_text: The Base URL of Secret Server
                e.g. https://myserver/SecretServer or
                https://mytenant.secretservercloud.com
            id: server_url
            label: Secret Server URL
            type: string
        -   help_text: The (Application) user username
            id: username
            label: Username
            type: string
        -   help_text: The corresponding password
            id: password
            label: Password
            secret: true
            type: string
        metadata:
        -   help_text: The integer ID of the secret
            id: secret_id
            label: Secret ID
            type: string
        -   help_text: The field to extract from the
                secret
            id: secret_field
            label: Secret Field
            type: string
        required:
        - server_url
        - username
        - password
        - secret_id
        - secret_field
    kind: external
    managed: true
    modified: '2022-01-29T22:54:47.874220Z'
    name: Thycotic Secret Server
    namespace: thycotic_tss
    related:
        activity_stream: /api/v2/credential_types/26/activity_stream/
        credentials: /api/v2/credential_types/26/credentials/
    summary_fields:
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/26/
-   created: '2022-02-14T21:40:25.876082Z'
    description: REST API Credential
    id: 27
    injectors:
        env:
            rest_password_env: '{{ rest_password }}'
            rest_username_env: '{{ rest_username }}'
        extra_vars:
            rest_password: '{{ rest_password }}'
            rest_username: '{{ rest_username }}'
    inputs:
        fields:
        -   id: rest_username
            label: REST Username
            type: string
        -   id: rest_password
            label: REST Password
            secret: true
            type: string
        required:
        - rest_username
        - rest_password
    kind: cloud
    managed: false
    modified: '2022-02-14T21:40:25.876107Z'
    name: REST API Credential
    namespace: null
    related:
        activity_stream: /api/v2/credential_types/27/activity_stream/
        created_by: /api/v2/users/1/
        credentials: /api/v2/credential_types/27/credentials/
        modified_by: /api/v2/users/1/
    summary_fields:
        created_by:
            first_name: ''
            id: 1
            last_name: ''
            username: admin
        modified_by:
            first_name: ''
            id: 1
            last_name: ''
            username: admin
        user_capabilities:
            delete: true
            edit: true
    type: credential_type
    url: /api/v2/credential_types/27/
...
